server {
    listen 80;
    server_name api.chat.denoteai.tech;

    # Allow Let's Encrypt verification
    location /.well-known/acme-challenge/ {
        root /var/www/html;
        try_files $uri =404;
    }
    
    # Redirect all HTTP traffic to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

# Common proxy settings snippet
proxy_set_header Upgrade $http_upgrade;
proxy_set_header Connection 'upgrade';
proxy_set_header Host $host;
proxy_set_header X-Real-IP $remote_addr;
proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
proxy_set_header X-Forwarded-Proto $scheme;
proxy_set_header Authorization $http_authorization;
proxy_pass_header Authorization;
proxy_cache_bypass $http_upgrade;

server {
    listen 443 ssl;
    http2 on;
    server_name api.chat.denoteai.tech;
    
    # SSL configuration (using CloudPanel's stored certificates)
    # Ensure these paths are correct
    ssl_certificate /etc/nginx/ssl-certificates/api.chat.denoteai.tech.crt;
    ssl_certificate_key /etc/nginx/ssl-certificates/api.chat.denoteai.tech.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Google OAuth routes with rate limiting
    location /google-oauth/ {
        limit_req zone=auth_limit burst=5 nodelay;
        proxy_pass http://localhost:3000;
        include proxy_params;
    }
    
    # Proxy routes
    location /proxy/ {
        proxy_pass http://localhost:3000;
        include proxy_params;
    }
    
    # Config routes
    location /config {
        proxy_pass http://localhost:3000;
        include proxy_params;
    }
    
    # Legacy API routes - maintain backward compatibility
    location /api/ {
        # Strip the /api prefix
        rewrite ^/api/(.*) /$1 break;
        
        proxy_pass http://localhost:3000;
        include proxy_params;
    }
    
    # Default route - proxy everything else to the Node.js server
    location / {
        proxy_pass http://localhost:3000;
        include proxy_params;
    }
    
    # Enable gzip compression
    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "accelerometer=(), camera=(), geolocation=(), gyroscope=(), magnetometer=(), microphone=(), payment=(), usb=()" always;
    
    # HSTS (HTTP Strict Transport Security)
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
} 